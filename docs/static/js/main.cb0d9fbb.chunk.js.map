{"version":3,"sources":["utils.js","actions/employeeFetchAction.js","reducers/employeeListReducer.js","actions/employeeAddAction.js","reducers/employeeAddReducer.js","reducers/rootReducer.js","actions/employeeDeleteAction.js","components/Employee-List.js","components/Employee-Add.js","App.js","index.js","store.js"],"names":["handleErrors","response","ok","Error","statusText","emailRegex","RegExp","convertFlatObjectToNested","flatObj","Object","keys","reduce","prev","current","_obj","nestedKeys","split","prevBuiltObj","length","containValue","obj","values","some","val","addEmployeeToEmployees","employee","isEditing","dispatch","type","payload","deleteEmployeeToEmployees","id","fetchEmployeesSuccess","employees","fetchEmployeesError","error","getAllEmployees","fetch","then","res","json","initialState","pending","editEmployee","openAddEmployeeModel","closeAddEmployeeModel","onAddEmployeeStepperUpdate","currentStep","addEmployee","method","body","JSON","stringify","_addEmployee","catch","addEmployeeError","visible","editing","combineReducers","employeeListReducer","state","action","i","findIndex","e","filter","employeeAddReducer","deleteEmployee","_deleteEmployee","deleteEmployeeError","EmployeeList","selectedRowKeys","onChange","console","log","setState","props","_editEmployee","find","this","columns","title","dataIndex","key","render","data","toString","onClick","icon","EditOutlined","okText","cancelText","onConfirm","DeleteOutlined","map","user","address","formatted_address","suite","street","city","_employees","message","justify","tip","rowSelection","dataSource","Component","connect","Step","Steps","EmployeeAdd","formConfigs","placeholder","name","inputType","prefixIcon","UserOutlined","MailOutlined","validator","value","test","validationError","PhoneOutlined","isNaN","tooltip","HomeOutlined","ShopOutlined","TeamOutlined","ClusterOutlined","SoundOutlined","addonBefore","InteractionOutlined","stepperDestribution","Array","from","v","getFormFieldsAsHashMap","errors","input","formInvalid","handleFieldChange","event","preventDefault","target","inputControl","f","showModal","handleCancel","clearFormState","createInput","size","style","marginTop","onBlur","defaultValue","noValidate","prefix","suffix","InfoCircleOutlined","color","fontSize","marginLeft","handleSubmit","onSave","shouldContainNoError","form","oldForm","index","display","nestedObj","flatEmployeeStructure","objKey","previous","nestedKey","prevProps","prevState","loading","destroyOnClose","maskClosable","onOk","onCancel","footer","showForm","paddingRight","className","onSubmit","inputConfig","j","App","ghost","subTitle","extra","ReactDOM","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.cb0d9fbb.chunk.js","sourcesContent":["// Handle HTTP errors since delete won't.\nexport function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport const emailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nexport function convertNestedObjectToFlat(nestedObj) {\n  return Object.keys(nestedObj).reduce((prev, objKey) => {\n    let obj;\n    const value = nestedObj[objKey];\n    if (typeof value == 'object') {\n      obj = Object.keys(value).reduce((previous, nestedKey) => {\n        const obj = { [`${objKey}.${nestedKey}`]: value[nestedKey] };\n        return { ...previous, ...obj };\n      }, {});\n    } else {\n      obj = { [objKey]: value };\n    }\n    return { ...prev, ...obj };\n  }, {});\n}\n// it will handle just 1 nesting for now\n// making {\"address.street\": 1} => {\"address\": {\"street\": 1}}\nexport function convertFlatObjectToNested(flatObj) {\n  return Object.keys(flatObj).reduce((prev, current) => {\n    const nestedKeys = current.split('.');\n    let prevBuiltObj = null;\n    // here converting {\"address.street\": 1} => {\"address\": {\"street\": 1}}\n    if (prev[nestedKeys[0]]) {\n      prevBuiltObj = prev[nestedKeys[0]];\n    }\n    let _obj;\n    if (nestedKeys.length > 1) {\n      if (prevBuiltObj) {\n        prev[nestedKeys[0]][nestedKeys[1]] = flatObj[current];\n        prevBuiltObj = prev;\n      } else {\n        prevBuiltObj = { [nestedKeys[0]]: { [nestedKeys[1]]: flatObj[current] } };\n      }\n      _obj = prevBuiltObj;\n    } else {\n      _obj = { [current]: flatObj[current] };\n    }\n\n    return { ...prev, ..._obj };\n  }, {});\n}\n\nexport function containValue(obj) {\n  const data = Object.values(obj);\n  return data.some(val => val && val.length > 0);\n}\n","import { handleErrors } from '../utils';\n\nexport const FETCH_EMPLOYEE_BEGIN = 'FETCH_EMPLOYEE_BEGIN';\nexport const FETCH_EMPLOYEE_SUCCESS = 'FETCH_EMPLOYEE_SUCCESS';\nexport const FETCH_EMPLOYEE_ERROR = 'FETCH_EMPLOYEE_ERROR';\nexport const GET_EMPLOYEE_BEGIN = 'GET_EMPLOYEE_BEGIN';\nexport const GET_EMPLOYEE_SUCCESS = 'GET_EMPLOYEE_SUCCESS';\nexport const GET_EMPLOYEE_ERROR = 'GET_EMPLOYEE_ERROR';\nexport const ADD_EMPLOYEE_TO_EMPLOYEES_LIST = 'ADD_EMPLOYEE_TO_EMPLOYEES_LIST';\nexport const UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST = 'UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST';\nexport const DELETE_EMPLOYEE_TO_EMPLOYEES_LIST = 'DELETE_EMPLOYEE_TO_EMPLOYEES_LIST';\n\nexport function addEmployeeToEmployees(employee, isEditing) {\n  return dispatch => {\n    dispatch({\n      type: isEditing ? UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST : ADD_EMPLOYEE_TO_EMPLOYEES_LIST,\n      payload: employee\n    });\n  };\n}\nexport function deleteEmployeeToEmployees(id) {\n  debugger;\n  return dispatch => {\n    debugger;\n    dispatch({\n      type: DELETE_EMPLOYEE_TO_EMPLOYEES_LIST,\n      payload: id\n    });\n  };\n}\n\nfunction fetchEmployeesBegin() {\n  return {\n    type: FETCH_EMPLOYEE_BEGIN\n  };\n}\n\nfunction fetchEmployeesSuccess(employees) {\n  return {\n    type: FETCH_EMPLOYEE_SUCCESS,\n    employees\n  };\n}\n\nfunction fetchEmployeesError(error) {\n  return {\n    type: FETCH_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction getAllEmployees() {\n  return fetch('https://jsonplaceholder.typicode.com/users')\n    .then(handleErrors)\n    .then(res => res.json());\n}\nexport function getEmployee(id) {\n  return dispatch => {\n    dispatch(fetchEmployeesBegin());\n    return getAllEmployees()\n      .then(json => {\n        dispatch(fetchEmployeesSuccess(json));\n        return json;\n      })\n      .catch(error => dispatch(fetchEmployeesError(error)));\n  };\n}\n\nexport function fetchEmployees() {\n  return dispatch => {\n    dispatch(fetchEmployeesBegin());\n    return getAllEmployees()\n      .then(employees =>\n        employees.map(user => {\n          const address = user.address;\n          user.key = user.id; // Table need unique ref as key\n          user.formatted_address = `${address.suite} ${address.street} ${address.city}`;\n          return user;\n        })\n      )\n      .then(json => {\n        dispatch(fetchEmployeesSuccess(json));\n        return json;\n      })\n      .catch(error => dispatch(fetchEmployeesError(error)));\n  };\n}\n","import {\n  FETCH_EMPLOYEE_SUCCESS,\n  FETCH_EMPLOYEE_BEGIN,\n  FETCH_EMPLOYEE_ERROR,\n  ADD_EMPLOYEE_TO_EMPLOYEES_LIST,\n  UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST,\n  DELETE_EMPLOYEE_TO_EMPLOYEES_LIST\n} from '../actions/employeeFetchAction';\n\nconst initialState = {\n  pending: false,\n  employees: [],\n  error: null\n};\n\nexport function employeeListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_EMPLOYEE_BEGIN:\n      return {\n        ...state,\n        pending: true\n      };\n    case FETCH_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        employees: action.employees\n      };\n    case FETCH_EMPLOYEE_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    case ADD_EMPLOYEE_TO_EMPLOYEES_LIST:\n      return {\n        ...state,\n        employees: [action.payload, ...state.employees]\n      };\n    case UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST:\n      const i = state.employees.findIndex(e => e.id === action.payload.id);\n      state.employees[i] = action.payload;\n      debugger;\n      return {\n        ...state,\n        employees: [...state.employees]\n      };\n    case DELETE_EMPLOYEE_TO_EMPLOYEES_LIST:\n      debugger;\n      const employees = state.employees.filter(e => e.id !== action.payload);\n      return {\n        ...state,\n        employees\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getEmployees = state => state.employees;\nexport const getEmployeesPending = state => state.pending;\nexport const getEmployeesError = state => state.error;\n","import { handleErrors } from '../utils';\n\nexport const ADD_EMPLOYEE_BEGIN = 'ADD_EMPLOYEE_BEGIN';\nexport const ADD_EMPLOYEE_SUCCESS = 'ADD_EMPLOYEE_SUCCESS';\nexport const ADD_EMPLOYEE_ERROR = 'ADD_EMPLOYEE_ERROR';\nexport const OPEN_ADD_EMPLOYEE_MODEL = 'OPEN_ADD_EMPLOYEE_MOPEL';\nexport const CLOSE_ADD_EMPLOYEE_MODEL = 'CLOSE_ADD_EMPLOYEE_MOPEL';\nexport const ON_ADD_EMPLOYEE_STEPPER_UPDATE = 'ON_ADD_EMPLOYEE_STEPPER_UPDATE';\nexport const EDIT_EMPLOYEE = 'EDIT_EMPLOYEE';\n\nexport function editEmployee(employee) {\n  return dispatch => {\n    // updating editing employee detail in store\n    dispatch({\n      type: EDIT_EMPLOYEE,\n      payload: employee\n    });\n    // open model for user to edit\n    openAddEmployeeModel(dispatch);\n  };\n}\n\nfunction addEmployeeBegin() {\n  return {\n    type: ADD_EMPLOYEE_BEGIN\n  };\n}\n\nfunction addEmployeeSuccess() {\n  return {\n    type: ADD_EMPLOYEE_SUCCESS\n  };\n}\n\nfunction addEmployeeError(error) {\n  return {\n    type: ADD_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction _addEmployee(employee) {\n  return fetch(`https://jsonplaceholder.typicode.com/users`, {\n    method: 'POST',\n    body: employee && JSON.stringify(employee)\n  })\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function openAddEmployeeModel(dispatch) {\n  return dispatch({\n    type: OPEN_ADD_EMPLOYEE_MODEL\n  });\n}\n\nexport function closeAddEmployeeModel(dispatch) {\n  return dispatch({\n    type: CLOSE_ADD_EMPLOYEE_MODEL\n  });\n}\n\nexport function onAddEmployeeStepperUpdate(currentStep) {\n  return dispatch => {\n    dispatch({\n      type: ON_ADD_EMPLOYEE_STEPPER_UPDATE,\n      currentStep\n    });\n  };\n}\n\nexport function addEmployee(employee) {\n  return dispatch => {\n    dispatch(addEmployeeBegin());\n    return _addEmployee(employee)\n      .then(json => {\n        dispatch(addEmployeeSuccess());\n        return json;\n      })\n      .catch(error => dispatch(addEmployeeError(error)));\n  };\n}\n","import {\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEE_ERROR,\n  OPEN_ADD_EMPLOYEE_MODEL,\n  CLOSE_ADD_EMPLOYEE_MODEL,\n  ON_ADD_EMPLOYEE_STEPPER_UPDATE,\n  EDIT_EMPLOYEE\n} from '../actions/employeeAddAction';\n\nconst initialState = {\n  pending: false,\n  error: null,\n  visible: false,\n  currentStep: 0,\n  employee: null,\n  editing: false\n};\n\nexport function employeeAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_EMPLOYEE_BEGIN:\n      return {\n        ...state,\n        pending: true\n      };\n    case ADD_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        employees: action.employees\n      };\n    case ADD_EMPLOYEE_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    case OPEN_ADD_EMPLOYEE_MODEL:\n      return {\n        ...state,\n        visible: true\n      };\n    case CLOSE_ADD_EMPLOYEE_MODEL:\n      return {\n        ...state,\n        visible: false,\n        currentStep: 0\n      };\n    case ON_ADD_EMPLOYEE_STEPPER_UPDATE:\n      return {\n        ...state,\n        currentStep: action.currentStep\n      };\n    case EDIT_EMPLOYEE:\n      return {\n        ...state,\n        editing: true,\n        employee: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getEmployees = state => state.employees;\nexport const getEmployeesPending = state => state.pending;\nexport const getEmployeesError = state => state.error;\n","import { combineReducers } from 'redux';\nimport { employeeListReducer } from './employeeListReducer';\nimport { employeeAddReducer } from './employeeAddReducer';\n\nexport default combineReducers({\n  employeeListReducer,\n  employeeAddReducer\n});\n","import { handleErrors } from '../utils';\n\nexport const DELETE_EMPLOYEE_BEGIN = 'DELETE_EMPLOYEE_BEGIN';\nexport const DELETE_EMPLOYEE_SUCCESS = 'DELETE_EMPLOYEE_SUCCESS';\nexport const DELETE_EMPLOYEE_ERROR = 'DELETE_EMPLOYEE_ERROR';\n\nfunction deleteEmployeeBegin() {\n  return {\n    type: DELETE_EMPLOYEE_BEGIN\n  };\n}\n\nfunction deleteEmployeeSuccess() {\n  return {\n    type: DELETE_EMPLOYEE_SUCCESS\n  };\n}\n\nfunction deleteEmployeeError(error) {\n  return {\n    type: DELETE_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction _deleteEmployee(id) {\n  return fetch(`https://jsonplaceholder.typicode.com/users:${id}`, {\n    method: 'DELETE'\n  })\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function deleteEmployee(id) {\n  debugger;\n  return dispatch => {\n    debugger;\n    dispatch(deleteEmployeeBegin());\n    return _deleteEmployee(id)\n      .then(json => {\n        dispatch(deleteEmployeeSuccess());\n        return json;\n      })\n      .catch(error => dispatch(deleteEmployeeError(error)));\n  };\n}\n","import React, { Component } from 'react';\nimport { Table, Button, Popconfirm, Spin, Row } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { fetchEmployees, deleteEmployeeToEmployees } from '../actions/employeeFetchAction';\nimport { editEmployee } from '../actions/employeeAddAction';\nimport { connect } from 'react-redux';\nimport { deleteEmployee } from '../actions/employeeDeleteAction';\n\nclass EmployeeList extends Component {\n  columns;\n  state = {\n    selectedRowKeys: [],\n    employees: null\n  };\n  onChange = selectedRowKeys => {\n    console.log(selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  _deleteEmployee = id => {\n    debugger;\n    this.props.dispatch(deleteEmployee(id));\n    // TODO: //call this when above async function resolve\n    this.props.dispatch(deleteEmployeeToEmployees(id));\n  };\n\n  _editEmployee = id => {\n    const { employees } = this.props;\n    const employee = employees.find(e => e.id === id);\n    this.props.dispatch(editEmployee(employee));\n  };\n\n  componentDidMount() {\n    this.columns = [\n      { title: 'Name', dataIndex: 'name', key: 'name' },\n      { title: 'Email', dataIndex: 'email', key: 'email' },\n      { title: 'Address', dataIndex: 'formatted_address', key: 'formatted_address' },\n      { title: 'Phone', dataIndex: 'phone', key: 'phone' },\n      {\n        title: 'Action',\n        dataIndex: 'id',\n        key: 'id',\n        render: (key, data) => (\n          <div key={(key || 1).toString()}>\n            <Button onClick={() => console.log(this._editEmployee(key))} icon={<EditOutlined />} />\n            <Popconfirm\n              title=\"you want to delete this employee？\"\n              okText=\"obviously\"\n              cancelText=\"No, my mistake\"\n              onConfirm={() => this._deleteEmployee(key)}\n            >\n              <Button icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </div>\n        )\n      }\n    ];\n    this.props.dispatch(fetchEmployees());\n  }\n\n  render() {\n    const { selectedRowKeys } = this.state;\n    const { error, employees, pending } = this.props;\n    const _employees = employees.map(user => {\n      const address = user.address;\n      user.key = user.id; // Table need unique ref as key\n      user.formatted_address = `${address.suite} ${address.street} ${address.city}`;\n      return user;\n    });\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n    if (pending) {\n      return (\n        <Row key={0} justify=\"center\">\n          <Spin tip=\"Loading Employees List..\"></Spin>\n        </Row>\n      );\n    }\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onChange\n    };\n    return <Table rowSelection={rowSelection} columns={this.columns} dataSource={_employees} />;\n  }\n}\nconst mapStateToProps = state => ({\n  employees: state.employeeListReducer.employees,\n  error: state.employeeListReducer.error,\n  pending: state.employeeListReducer.pending\n});\n\nexport default connect(mapStateToProps)(EmployeeList);\n","import React, { Component } from 'react';\nimport { Modal, Button, Input, Tooltip, Steps } from 'antd';\nimport { connect } from 'react-redux';\nimport { emailRegex, convertFlatObjectToNested, containValue, convertNestedObjectToFlat } from '../utils';\nimport {\n  InfoCircleOutlined,\n  UserOutlined,\n  SoundOutlined,\n  ClusterOutlined,\n  TeamOutlined,\n  ShopOutlined,\n  HomeOutlined,\n  PhoneOutlined,\n  MailOutlined,\n  InteractionOutlined\n} from '@ant-design/icons';\nimport {\n  openAddEmployeeModel,\n  onAddEmployeeStepperUpdate,\n  addEmployee,\n  closeAddEmployeeModel\n} from '../actions/employeeAddAction';\nconst { Step } = Steps;\n\nclass EmployeeAdd extends Component {\n  id;\n  formConfigs = [\n    {\n      placeholder: 'Enter your Name',\n      name: 'name',\n      inputType: 'text',\n      prefixIcon: <UserOutlined />\n    },\n    {\n      placeholder: 'Enter your Email',\n      name: 'email',\n      inputType: 'email',\n      prefixIcon: <MailOutlined />,\n      validator: value => emailRegex.test(value),\n      validationError: 'Email is not valid!'\n    },\n    {\n      placeholder: 'Enter your Phone',\n      name: 'phone',\n      inputType: 'phone',\n      prefixIcon: <PhoneOutlined />,\n      validator: value => !isNaN(value) && value.length >= 10,\n      validationError: 'phone number should contain 10 number digit'\n    },\n    {\n      placeholder: 'Enter Address Suite',\n      name: 'address.suite',\n      inputType: 'text',\n      tooltip: 'Apartmant or Flat number',\n      prefixIcon: <HomeOutlined />\n    },\n    {\n      placeholder: 'Enter your Street',\n      name: 'address.street',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter your City',\n      name: 'address.city',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter ZipCode',\n      name: 'address.zipcode',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter username',\n      name: 'username',\n      inputType: 'text',\n      prefixIcon: <TeamOutlined />,\n      validator: value => value.split(' ').length <= 1,\n      validationError: 'username should not contain space',\n      tooltip: 'username should not contain space'\n    },\n    {\n      placeholder: 'Enter Company Name',\n      name: 'company.name',\n      inputType: 'text',\n      prefixIcon: <ClusterOutlined />\n    },\n    {\n      placeholder: 'Enter Company Catch Phrase',\n      name: 'company.catchPhrase',\n      inputType: 'text',\n      tooltip: 'Describe your company in short way',\n      prefixIcon: <SoundOutlined />\n    },\n    {\n      placeholder: 'Enter Company Website',\n      name: 'website',\n      addonBefore: 'http://',\n      inputType: 'text',\n      tooltip: 'Describe your company in short way',\n      prefixIcon: <InteractionOutlined />\n    }\n  ];\n  stepperDestribution = [\n    // first 6 inputs in formConfigs are personalInfo\n    Array.from(Array(7).keys(), v => this.formConfigs[v]),\n    // remain are commpany info\n    Array.from(Array(this.formConfigs.length - 7).keys(), v => this.formConfigs[v + 7])\n  ];\n\n  // local state, when form is valid will save in redux store\n  state = {\n    ...this.getFormFieldsAsHashMap(this.formConfigs),\n    errors: this.getFormFieldsAsHashMap(\n      this.formConfigs.filter(input => !input.validator) /**InputContainValidation */\n    ),\n    formInvalid: false\n  };\n\n  getFormFieldsAsHashMap(form, oldForm = {}) {\n    return form.reduce(\n      (prev, current) => ({\n        ...prev,\n        [current.name]: oldForm[current.name] || ''\n      }),\n      {}\n    );\n  }\n\n  handleFieldChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    const inputControl = this.formConfigs.find(f => f.name === name);\n    if (inputControl.validator && !inputControl.validator(value)) {\n      errors[name] = inputControl.validationError;\n    } else {\n      errors[name] = '';\n    }\n    const isFormStateValid = containValue({ ...this.state, errors: null, formInvalid: null });\n    if (isFormStateValid) {\n      this.setState({ formInvalid: false });\n    }\n    this.setState({ errors, [name]: value });\n  };\n  showModal = () => {\n    this.props.dispatch(openAddEmployeeModel);\n  };\n\n  onChange = current => {\n    this.props.dispatch(onAddEmployeeStepperUpdate(current));\n  };\n\n  handleCancel = () => {\n    this.clearFormState();\n    this.props.dispatch(closeAddEmployeeModel);\n  };\n\n  showForm(current, index) {\n    return {\n      display: current === index ? 'initial' : 'none'\n    };\n  }\n\n  createInput = (input, key) => {\n    return (\n      <div key={key.toString()}>\n        <Input\n          size=\"large\"\n          style={{ marginTop: 12 }}\n          placeholder={input.placeholder}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldChange}\n          addonBefore={input.addonBefore || ''}\n          defaultValue={this.state[input.name]}\n          noValidate\n          name={input.name}\n          type={input.type}\n          prefix={input.prefixIcon}\n          suffix={\n            input.tooltip ? (\n              <Tooltip title={input.tooltip}>\n                <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\n              </Tooltip>\n            ) : (\n              <span></span>\n            )\n          }\n        />\n        <span style={{ color: 'red', fontSize: 12, marginLeft: 14 }}>{this.state.errors[input.name]}</span>\n      </div>\n    );\n  };\n\n  handleSubmit = event => {\n    const { onSave, isEditing } = this.props;\n    event.preventDefault();\n\n    // if found value str in errors, then not valid\n    const shouldContainNoError = !containValue(this.state.errors);\n    // consider all input fields required\n    const isFormStateValid = containValue({ ...this.state, errors: null, formInvalid: null });\n\n    if (isFormStateValid && shouldContainNoError) {\n      const employeeFormState = { ...this.state, errors: null, formInvalid: null };\n      const employee = convertFlatObjectToNested(employeeFormState);\n      employee.id = this.id;\n      // TODO:// close modal only when this async function finish\n      this.props.dispatch(addEmployee(employee));\n      this.handleCancel();\n      this.props.dispatch(onSave(employee, isEditing)); // notify parent\n      // clear form\n      this.clearFormState();\n    } else {\n      this.setState({ formInvalid: true });\n    }\n  };\n\n  clearFormState = () => {\n    this.setState({\n      ...this.getFormFieldsAsHashMap(this.formConfigs, {})\n    });\n  };\n  editEmployee(employee) {\n    debugger;\n    const flatEmployeeStructure = convertNestedObjectToFlat(employee);\n    this.id = flatEmployeeStructure.id;\n    this.setState({\n      ...this.getFormFieldsAsHashMap(this.formConfigs, flatEmployeeStructure)\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.employee !== this.props.employee) {\n      if (this.props.employee) {\n        this.editEmployee(this.props.employee);\n      }\n    }\n  }\n\n  render() {\n    const { formInvalid } = this.state;\n    const { visible, loading, current } = this.props;\n\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Add Employee\n        </Button>\n        <Modal\n          destroyOnClose={true}\n          maskClosable={false}\n          visible={visible}\n          title=\"Add Employee\"\n          onOk={this.handleSubmit}\n          onCancel={this.handleCancel}\n          footer={[\n            <span\n              key=\"invalid\"\n              style={{\n                ...this.showForm(formInvalid, true),\n                paddingRight: 12,\n                color: 'red'\n              }}\n            >\n              Form Not Valid\n            </span>,\n            <Button key=\"back\" onClick={() => this.onChange(0)} style={this.showForm(current, 1)}>\n              Back\n            </Button>,\n            <Button key=\"next\" onClick={() => this.onChange(1)} style={this.showForm(current, 0)} type=\"primary\">\n              Next\n            </Button>,\n            <Button\n              style={this.showForm(current, 1)}\n              key=\"submit\"\n              type=\"primary\"\n              loading={loading}\n              onClick={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          ]}\n        >\n          <Steps\n            type=\"navigation\"\n            size=\"small\"\n            current={current}\n            onChange={this.onChange}\n            className=\"site-navigation-steps\"\n          >\n            <Step title=\"Personal Info\" />\n            <Step title=\"Company Info\" />\n          </Steps>\n          <form onSubmit={this.handleSubmit} noValidate>\n            {this.stepperDestribution.map((form, i) => (\n              <div key={i.toString()} style={this.showForm(current, i)}>\n                {form.map((inputConfig, j) => this.createInput(inputConfig, j))}\n              </div>\n            ))}\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    employee: state.employeeAddReducer.employee,\n    loading: state.employeeAddReducer.loading,\n    visible: state.employeeAddReducer.visible,\n    current: state.employeeAddReducer.currentStep,\n    isEditing: state.employeeAddReducer.editing\n  };\n};\n\nexport default connect(mapStateToProps)(EmployeeAdd);\n","import React from 'react';\nimport { Row, PageHeader } from 'antd';\nimport EmployeeList from './components/Employee-List';\nimport EmployeeAdd from './components/Employee-Add';\nimport { addEmployeeToEmployees } from './actions/employeeFetchAction';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageHeader\n        ghost={false}\n        title=\"Employee Management\"\n        subTitle=\"this is active employee list\"\n        extra={[\n          <Row key={0} justify=\"end\">\n            {/* need to refetch employee list, again but as jsonplaceholder\n      dont save data, will just update employees list in memeory  */}\n            <EmployeeAdd onSave={addEmployeeToEmployees}></EmployeeAdd>\n          </Row>\n        ]}\n      />\n      <EmployeeList></EmployeeList>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createStore from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={createStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}