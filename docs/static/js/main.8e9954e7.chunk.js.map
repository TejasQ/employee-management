{"version":3,"sources":["utils.js","actions/employeeFetchAction.js","reducers/employeeListReducer.js","actions/employeeAddAction.js","reducers/employeeAddReducer.js","reducers/rootReducer.js","actions/employeeDeleteAction.js","components/Employee-List.js","actions/employeeUpdateAction.js","components/Employee-Add.js","App.js","index.js","store.js"],"names":["handleErrors","response","ok","Error","statusText","emailRegex","RegExp","convertFlatObjectToNested","flatObj","Object","keys","reduce","prev","current","_obj","nestedKeys","split","prevBuiltObj","length","containValue","obj","values","some","val","addEmployeeToEmployees","employee","isEditing","dispatch","type","payload","deleteEmployeeToEmployees","id","fetchEmployees","fetch","then","res","json","employees","map","user","address","key","formatted_address","suite","street","city","catch","error","fetchEmployeesError","initialState","pending","editEmployee","openAddEmployeeModel","closeAddEmployeeModel","onAddEmployeeStepperUpdate","currentStep","addEmployee","method","body","JSON","stringify","_addEmployee","addEmployeeError","visible","editing","combineReducers","employeeListReducer","state","action","i","findIndex","e","filter","employeeAddReducer","deleteEmployee","_deleteEmployee","deleteEmployeeError","EmployeeList","selectedRowKeys","onChange","console","log","setState","props","_editEmployee","find","this","columns","title","dataIndex","render","data","toString","onClick","icon","EditOutlined","okText","cancelText","onConfirm","DeleteOutlined","_employees","message","justify","tip","rowSelection","dataSource","Component","connect","updateEmployee","_updateEmployee","updateEmployeeError","Step","Steps","EmployeeAdd","formConfigs","placeholder","name","inputType","prefixIcon","UserOutlined","MailOutlined","validator","value","test","validationError","PhoneOutlined","isNaN","tooltip","HomeOutlined","ShopOutlined","TeamOutlined","ClusterOutlined","SoundOutlined","addonBefore","InteractionOutlined","stepperDestribution","Array","from","v","getFormFieldsAsHashMap","errors","input","formInvalid","handleFieldChange","event","preventDefault","target","inputControl","f","showModal","handleCancel","clearFormState","createInput","size","style","marginTop","onBlur","defaultValue","noValidate","prefix","suffix","InfoCircleOutlined","color","fontSize","marginLeft","handleSubmit","onSave","shouldContainNoError","form","oldForm","index","display","nestedObj","flatEmployeeStructure","objKey","previous","nestedKey","prevProps","prevState","loading","destroyOnClose","maskClosable","onOk","onCancel","footer","showForm","paddingRight","className","onSubmit","inputConfig","j","App","ghost","subTitle","extra","ReactDOM","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.8e9954e7.chunk.js","sourcesContent":["// Handle HTTP errors since delete won't.\nexport function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport const emailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nexport function convertNestedObjectToFlat(nestedObj) {\n  return Object.keys(nestedObj).reduce((prev, objKey) => {\n    let obj;\n    const value = nestedObj[objKey];\n    if (typeof value == 'object') {\n      obj = Object.keys(value).reduce((previous, nestedKey) => {\n        const obj = { [`${objKey}.${nestedKey}`]: value[nestedKey] };\n        return { ...previous, ...obj };\n      }, {});\n    } else {\n      obj = { [objKey]: value };\n    }\n    return { ...prev, ...obj };\n  }, {});\n}\n// it will handle just 1 nesting for now\n// making {\"address.street\": 1} => {\"address\": {\"street\": 1}}\nexport function convertFlatObjectToNested(flatObj) {\n  return Object.keys(flatObj).reduce((prev, current) => {\n    const nestedKeys = current.split('.');\n    let prevBuiltObj = null;\n    // here converting {\"address.street\": 1} => {\"address\": {\"street\": 1}}\n    if (prev[nestedKeys[0]]) {\n      prevBuiltObj = prev[nestedKeys[0]];\n    }\n    let _obj;\n    if (nestedKeys.length > 1) {\n      if (prevBuiltObj) {\n        prev[nestedKeys[0]][nestedKeys[1]] = flatObj[current];\n        prevBuiltObj = prev;\n      } else {\n        prevBuiltObj = { [nestedKeys[0]]: { [nestedKeys[1]]: flatObj[current] } };\n      }\n      _obj = prevBuiltObj;\n    } else {\n      _obj = { [current]: flatObj[current] };\n    }\n\n    return { ...prev, ..._obj };\n  }, {});\n}\n\nexport function containValue(obj) {\n  const data = Object.values(obj);\n  return data.some(val => val && val.length > 0);\n}\n","import { handleErrors } from '../utils';\n\nexport const FETCH_EMPLOYEE_BEGIN = 'FETCH_EMPLOYEE_BEGIN';\nexport const FETCH_EMPLOYEE_SUCCESS = 'FETCH_EMPLOYEE_SUCCESS';\nexport const FETCH_EMPLOYEE_ERROR = 'FETCH_EMPLOYEE_ERROR';\nexport const GET_EMPLOYEE_BEGIN = 'GET_EMPLOYEE_BEGIN';\nexport const GET_EMPLOYEE_SUCCESS = 'GET_EMPLOYEE_SUCCESS';\nexport const GET_EMPLOYEE_ERROR = 'GET_EMPLOYEE_ERROR';\nexport const ADD_EMPLOYEE_TO_EMPLOYEES_LIST = 'ADD_EMPLOYEE_TO_EMPLOYEES_LIST';\nexport const UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST = 'UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST';\nexport const DELETE_EMPLOYEE_TO_EMPLOYEES_LIST = 'DELETE_EMPLOYEE_TO_EMPLOYEES_LIST';\n\nexport function addEmployeeToEmployees(employee, isEditing) {\n  return dispatch => {\n    dispatch({\n      type: isEditing ? UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST : ADD_EMPLOYEE_TO_EMPLOYEES_LIST,\n      payload: employee\n    });\n  };\n}\nexport function deleteEmployeeToEmployees(id) {\n  return dispatch => {\n    dispatch({\n      type: DELETE_EMPLOYEE_TO_EMPLOYEES_LIST,\n      payload: id\n    });\n  };\n}\n\nfunction fetchEmployeesBegin() {\n  return {\n    type: FETCH_EMPLOYEE_BEGIN\n  };\n}\n\nfunction fetchEmployeesSuccess(employees) {\n  return {\n    type: FETCH_EMPLOYEE_SUCCESS,\n    employees\n  };\n}\n\nfunction fetchEmployeesError(error) {\n  return {\n    type: FETCH_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction getAllEmployees() {\n  return fetch('https://jsonplaceholder.typicode.com/users')\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function fetchEmployees() {\n  return dispatch => {\n    dispatch(fetchEmployeesBegin());\n    return getAllEmployees()\n      .then(employees =>\n        employees.map(user => {\n          const address = user.address;\n          user.key = user.id; // Table need unique ref as key\n          user.formatted_address = `${address.suite} ${address.street} ${address.city}`;\n          return user;\n        })\n      )\n      .then(json => {\n        dispatch(fetchEmployeesSuccess(json));\n        return json;\n      })\n      .catch(error => dispatch(fetchEmployeesError(error)));\n  };\n}\n","import {\n  FETCH_EMPLOYEE_SUCCESS,\n  FETCH_EMPLOYEE_BEGIN,\n  FETCH_EMPLOYEE_ERROR,\n  ADD_EMPLOYEE_TO_EMPLOYEES_LIST,\n  UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST,\n  DELETE_EMPLOYEE_TO_EMPLOYEES_LIST\n} from '../actions/employeeFetchAction';\n\nconst initialState = {\n  pending: false,\n  employees: [],\n  error: null\n};\n\nexport function employeeListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_EMPLOYEE_BEGIN:\n      return {\n        ...state,\n        pending: true\n      };\n    case FETCH_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        employees: action.employees\n      };\n    case FETCH_EMPLOYEE_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    case ADD_EMPLOYEE_TO_EMPLOYEES_LIST:\n      return {\n        ...state,\n        employees: [action.payload, ...state.employees]\n      };\n    case UPDATE_EMPLOYEE_TO_EMPLOYEES_LIST:\n      const i = state.employees.findIndex(e => e.id === action.payload.id);\n      state.employees[i] = action.payload;\n      return {\n        ...state,\n        employees: [...state.employees]\n      };\n    case DELETE_EMPLOYEE_TO_EMPLOYEES_LIST:\n      const employees = state.employees.filter(e => e.id !== action.payload);\n      return {\n        ...state,\n        employees\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getEmployees = state => state.employees;\nexport const getEmployeesPending = state => state.pending;\nexport const getEmployeesError = state => state.error;\n","import { handleErrors } from '../utils';\n\nexport const ADD_EMPLOYEE_BEGIN = 'ADD_EMPLOYEE_BEGIN';\nexport const ADD_EMPLOYEE_SUCCESS = 'ADD_EMPLOYEE_SUCCESS';\nexport const ADD_EMPLOYEE_ERROR = 'ADD_EMPLOYEE_ERROR';\nexport const OPEN_ADD_EMPLOYEE_MODEL = 'OPEN_ADD_EMPLOYEE_MOPEL';\nexport const CLOSE_ADD_EMPLOYEE_MODEL = 'CLOSE_ADD_EMPLOYEE_MOPEL';\nexport const ON_ADD_EMPLOYEE_STEPPER_UPDATE = 'ON_ADD_EMPLOYEE_STEPPER_UPDATE';\nexport const EDIT_EMPLOYEE = 'EDIT_EMPLOYEE';\n\nexport function editEmployee(employee) {\n  return dispatch => {\n    // updating editing employee detail in store\n    dispatch({\n      type: EDIT_EMPLOYEE,\n      payload: employee\n    });\n    // open model for user to edit\n    openAddEmployeeModel(dispatch);\n  };\n}\n\nfunction addEmployeeBegin() {\n  return {\n    type: ADD_EMPLOYEE_BEGIN\n  };\n}\n\nfunction addEmployeeSuccess() {\n  return {\n    type: ADD_EMPLOYEE_SUCCESS\n  };\n}\n\nfunction addEmployeeError(error) {\n  return {\n    type: ADD_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction _addEmployee(employee) {\n  return fetch(`https://jsonplaceholder.typicode.com/users`, {\n    method: 'POST',\n    body: employee && JSON.stringify(employee)\n  })\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function openAddEmployeeModel(dispatch) {\n  return dispatch({\n    type: OPEN_ADD_EMPLOYEE_MODEL\n  });\n}\n\nexport function closeAddEmployeeModel(dispatch) {\n  return dispatch({\n    type: CLOSE_ADD_EMPLOYEE_MODEL\n  });\n}\n\nexport function onAddEmployeeStepperUpdate(currentStep) {\n  return dispatch => {\n    dispatch({\n      type: ON_ADD_EMPLOYEE_STEPPER_UPDATE,\n      currentStep\n    });\n  };\n}\n\nexport function addEmployee(employee) {\n  return dispatch => {\n    dispatch(addEmployeeBegin());\n    return _addEmployee(employee)\n      .then(json => {\n        dispatch(addEmployeeSuccess());\n        return json;\n      })\n      .catch(error => dispatch(addEmployeeError(error)));\n  };\n}\n","import {\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCESS,\n  ADD_EMPLOYEE_ERROR,\n  OPEN_ADD_EMPLOYEE_MODEL,\n  CLOSE_ADD_EMPLOYEE_MODEL,\n  ON_ADD_EMPLOYEE_STEPPER_UPDATE,\n  EDIT_EMPLOYEE\n} from '../actions/employeeAddAction';\n\nconst initialState = {\n  pending: false,\n  error: null,\n  visible: false,\n  currentStep: 0,\n  employee: null,\n  editing: false\n};\n\nexport function employeeAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_EMPLOYEE_BEGIN:\n      return {\n        ...state,\n        pending: true\n      };\n    case ADD_EMPLOYEE_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        employees: action.employees\n      };\n    case ADD_EMPLOYEE_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    case OPEN_ADD_EMPLOYEE_MODEL:\n      return {\n        ...state,\n        visible: true\n      };\n    case CLOSE_ADD_EMPLOYEE_MODEL:\n      return {\n        ...state,\n        visible: false,\n        currentStep: 0\n      };\n    case ON_ADD_EMPLOYEE_STEPPER_UPDATE:\n      return {\n        ...state,\n        currentStep: action.currentStep\n      };\n    case EDIT_EMPLOYEE:\n      return {\n        ...state,\n        editing: true,\n        employee: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getEmployees = state => state.employees;\nexport const getEmployeesPending = state => state.pending;\nexport const getEmployeesError = state => state.error;\n","import { combineReducers } from 'redux';\nimport { employeeListReducer } from './employeeListReducer';\nimport { employeeAddReducer } from './employeeAddReducer';\n\nexport default combineReducers({\n  employeeListReducer,\n  employeeAddReducer\n});\n","import { handleErrors } from '../utils';\n\nexport const DELETE_EMPLOYEE_BEGIN = 'DELETE_EMPLOYEE_BEGIN';\nexport const DELETE_EMPLOYEE_SUCCESS = 'DELETE_EMPLOYEE_SUCCESS';\nexport const DELETE_EMPLOYEE_ERROR = 'DELETE_EMPLOYEE_ERROR';\n\nfunction deleteEmployeeBegin() {\n  return {\n    type: DELETE_EMPLOYEE_BEGIN\n  };\n}\n\nfunction deleteEmployeeSuccess() {\n  return {\n    type: DELETE_EMPLOYEE_SUCCESS\n  };\n}\n\nfunction deleteEmployeeError(error) {\n  return {\n    type: DELETE_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction _deleteEmployee(id) {\n  return fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n    method: 'DELETE'\n  })\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function deleteEmployee(id) {\n  return dispatch => {\n    dispatch(deleteEmployeeBegin());\n    return _deleteEmployee(id)\n      .then(json => {\n        dispatch(deleteEmployeeSuccess());\n        return json;\n      })\n      .catch(error => dispatch(deleteEmployeeError(error)));\n  };\n}\n","import React, { Component } from 'react';\nimport { Table, Button, Popconfirm, Spin, Row } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { fetchEmployees, deleteEmployeeToEmployees } from '../actions/employeeFetchAction';\nimport { editEmployee } from '../actions/employeeAddAction';\nimport { connect } from 'react-redux';\nimport { deleteEmployee } from '../actions/employeeDeleteAction';\n\nclass EmployeeList extends Component {\n  columns;\n  state = {\n    selectedRowKeys: [],\n    employees: null\n  };\n  onChange = selectedRowKeys => {\n    console.log(selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  _deleteEmployee = id => {\n    this.props.dispatch(deleteEmployee(id));\n    // TODO: //call this when above async function resolve\n    this.props.dispatch(deleteEmployeeToEmployees(id));\n  };\n\n  _editEmployee = id => {\n    const { employees } = this.props;\n    const employee = employees.find(e => e.id === id);\n    this.props.dispatch(editEmployee(employee));\n  };\n\n  componentDidMount() {\n    this.columns = [\n      { title: 'Name', dataIndex: 'name', key: 'name' },\n      { title: 'Email', dataIndex: 'email', key: 'email' },\n      { title: 'Address', dataIndex: 'formatted_address', key: 'formatted_address' },\n      { title: 'Phone', dataIndex: 'phone', key: 'phone' },\n      {\n        title: 'Action',\n        dataIndex: 'id',\n        key: 'id',\n        render: (key, data) => (\n          <div key={(key || 1).toString()}>\n            <Button onClick={() => console.log(this._editEmployee(key))} icon={<EditOutlined />} />\n            <Popconfirm\n              title=\"you want to delete this employee？\"\n              okText=\"obviously\"\n              cancelText=\"No, my mistake\"\n              onConfirm={() => this._deleteEmployee(key)}\n            >\n              <Button icon={<DeleteOutlined />} />\n            </Popconfirm>\n          </div>\n        )\n      }\n    ];\n    this.props.dispatch(fetchEmployees());\n  }\n\n  render() {\n    const { selectedRowKeys } = this.state;\n    const { error, employees, pending } = this.props;\n    const _employees = employees.map(user => {\n      const address = user.address;\n      user.key = user.id; // Table need unique ref as key\n      user.formatted_address = `${address.suite} ${address.street} ${address.city}`;\n      return user;\n    });\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n    if (pending) {\n      return (\n        <Row key={0} justify=\"center\">\n          <Spin tip=\"Loading Employees List..\"></Spin>\n        </Row>\n      );\n    }\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onChange\n    };\n    return <Table rowSelection={rowSelection} columns={this.columns} dataSource={_employees} />;\n  }\n}\nconst mapStateToProps = state => ({\n  employees: state.employeeListReducer.employees,\n  error: state.employeeListReducer.error,\n  pending: state.employeeListReducer.pending\n});\n\nexport default connect(mapStateToProps)(EmployeeList);\n","import { handleErrors } from '../utils';\n\nexport const UPDATE_EMPLOYEE_BEGIN = 'UPDATE_EMPLOYEE_BEGIN';\nexport const UPDATE_EMPLOYEE_SUCCESS = 'UPDATE_EMPLOYEE_SUCCESS';\nexport const UPDATE_EMPLOYEE_ERROR = 'UPDATE_EMPLOYEE_ERROR';\n\nfunction updateEmployeeBegin() {\n  return {\n    type: UPDATE_EMPLOYEE_BEGIN\n  };\n}\n\nfunction updateEmployeeSuccess() {\n  return {\n    type: UPDATE_EMPLOYEE_SUCCESS\n  };\n}\n\nfunction updateEmployeeError(error) {\n  return {\n    type: UPDATE_EMPLOYEE_ERROR,\n    error: error\n  };\n}\n\nfunction _updateEmployee(id, employee) {\n  return fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {\n    method: 'PUT',\n    body: employee && JSON.stringify(employee)\n  })\n    .then(handleErrors)\n    .then(res => res.json());\n}\n\nexport function updateEmployee(id, employee) {\n  return dispatch => {\n    dispatch(updateEmployeeBegin());\n    return _updateEmployee(id, employee)\n      .then(json => {\n        dispatch(updateEmployeeSuccess());\n        return json;\n      })\n      .catch(error => dispatch(updateEmployeeError(error)));\n  };\n}\n","import React, { Component } from 'react';\nimport { Modal, Button, Input, Tooltip, Steps } from 'antd';\nimport { connect } from 'react-redux';\nimport { emailRegex, convertFlatObjectToNested, containValue, convertNestedObjectToFlat } from '../utils';\nimport {\n  InfoCircleOutlined,\n  UserOutlined,\n  SoundOutlined,\n  ClusterOutlined,\n  TeamOutlined,\n  ShopOutlined,\n  HomeOutlined,\n  PhoneOutlined,\n  MailOutlined,\n  InteractionOutlined\n} from '@ant-design/icons';\nimport {\n  openAddEmployeeModel,\n  onAddEmployeeStepperUpdate,\n  addEmployee,\n  closeAddEmployeeModel\n} from '../actions/employeeAddAction';\nimport { updateEmployee } from '../actions/employeeUpdateAction';\nconst { Step } = Steps;\n\nclass EmployeeAdd extends Component {\n  id;\n  formConfigs = [\n    {\n      placeholder: 'Enter your Name',\n      name: 'name',\n      inputType: 'text',\n      prefixIcon: <UserOutlined />\n    },\n    {\n      placeholder: 'Enter your Email',\n      name: 'email',\n      inputType: 'email',\n      prefixIcon: <MailOutlined />,\n      validator: value => emailRegex.test(value),\n      validationError: 'Email is not valid!'\n    },\n    {\n      placeholder: 'Enter your Phone',\n      name: 'phone',\n      inputType: 'phone',\n      prefixIcon: <PhoneOutlined />,\n      validator: value => !isNaN(value) && value.length >= 10,\n      validationError: 'phone number should contain 10 number digit'\n    },\n    {\n      placeholder: 'Enter Address Suite',\n      name: 'address.suite',\n      inputType: 'text',\n      tooltip: 'Apartmant or Flat number',\n      prefixIcon: <HomeOutlined />\n    },\n    {\n      placeholder: 'Enter your Street',\n      name: 'address.street',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter your City',\n      name: 'address.city',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter ZipCode',\n      name: 'address.zipcode',\n      inputType: 'text',\n      prefixIcon: <ShopOutlined />\n    },\n    {\n      placeholder: 'Enter username',\n      name: 'username',\n      inputType: 'text',\n      prefixIcon: <TeamOutlined />,\n      validator: value => value.split(' ').length <= 1,\n      validationError: 'username should not contain space',\n      tooltip: 'username should not contain space'\n    },\n    {\n      placeholder: 'Enter Company Name',\n      name: 'company.name',\n      inputType: 'text',\n      prefixIcon: <ClusterOutlined />\n    },\n    {\n      placeholder: 'Enter Company Catch Phrase',\n      name: 'company.catchPhrase',\n      inputType: 'text',\n      tooltip: 'Describe your company in short way',\n      prefixIcon: <SoundOutlined />\n    },\n    {\n      placeholder: 'Enter Company Website',\n      name: 'website',\n      addonBefore: 'http://',\n      inputType: 'text',\n      tooltip: 'Describe your company in short way',\n      prefixIcon: <InteractionOutlined />\n    }\n  ];\n  stepperDestribution = [\n    // first 6 inputs in formConfigs are personalInfo\n    Array.from(Array(7).keys(), v => this.formConfigs[v]),\n    // remain are commpany info\n    Array.from(Array(this.formConfigs.length - 7).keys(), v => this.formConfigs[v + 7])\n  ];\n\n  // local state, when form is valid will save in redux store\n  state = {\n    ...this.getFormFieldsAsHashMap(this.formConfigs),\n    errors: this.getFormFieldsAsHashMap(\n      this.formConfigs.filter(input => !input.validator) /**InputContainValidation */\n    ),\n    formInvalid: false\n  };\n\n  getFormFieldsAsHashMap(form, oldForm = {}) {\n    return form.reduce(\n      (prev, current) => ({\n        ...prev,\n        [current.name]: oldForm[current.name] || ''\n      }),\n      {}\n    );\n  }\n\n  handleFieldChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    const inputControl = this.formConfigs.find(f => f.name === name);\n    if (inputControl.validator && !inputControl.validator(value)) {\n      errors[name] = inputControl.validationError;\n    } else {\n      errors[name] = '';\n    }\n    const isFormStateValid = containValue({ ...this.state, errors: null, formInvalid: null });\n    if (isFormStateValid) {\n      this.setState({ formInvalid: false });\n    }\n    this.setState({ errors, [name]: value });\n  };\n  showModal = () => {\n    this.props.dispatch(openAddEmployeeModel);\n  };\n\n  onChange = current => {\n    this.props.dispatch(onAddEmployeeStepperUpdate(current));\n  };\n\n  handleCancel = () => {\n    this.clearFormState();\n    this.props.dispatch(closeAddEmployeeModel);\n  };\n\n  showForm(current, index) {\n    return {\n      display: current === index ? 'initial' : 'none'\n    };\n  }\n\n  createInput = (input, key) => {\n    return (\n      <div key={key.toString()}>\n        <Input\n          size=\"large\"\n          style={{ marginTop: 12 }}\n          placeholder={input.placeholder}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldChange}\n          addonBefore={input.addonBefore || ''}\n          defaultValue={this.state[input.name]}\n          noValidate\n          name={input.name}\n          type={input.type}\n          prefix={input.prefixIcon}\n          suffix={\n            input.tooltip ? (\n              <Tooltip title={input.tooltip}>\n                <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\n              </Tooltip>\n            ) : (\n              <span></span>\n            )\n          }\n        />\n        <span style={{ color: 'red', fontSize: 12, marginLeft: 14 }}>{this.state.errors[input.name]}</span>\n      </div>\n    );\n  };\n\n  handleSubmit = event => {\n    const { onSave, isEditing } = this.props;\n    event.preventDefault();\n\n    // if found value str in errors, then not valid\n    const shouldContainNoError = !containValue(this.state.errors);\n    // consider all input fields required\n    const isFormStateValid = containValue({ ...this.state, errors: null, formInvalid: null });\n\n    if (isFormStateValid && shouldContainNoError) {\n      const employeeFormState = { ...this.state, errors: null, formInvalid: null };\n      const employee = convertFlatObjectToNested(employeeFormState);\n      employee.id = this.id;\n      // TODO:// close modal only when this async function finish\n      // TODO:// move this api call to outside of this component and call from parent compoenent\n      if (isEditing) {\n        this.props.dispatch(updateEmployee(this.id, employee));\n      } else {\n        this.props.dispatch(addEmployee(employee));\n      }\n      this.handleCancel();\n      this.props.dispatch(onSave(employee, isEditing)); // notify parent\n      // clear form\n      this.clearFormState();\n    } else {\n      this.setState({ formInvalid: true });\n    }\n  };\n\n  clearFormState = () => {\n    this.setState({\n      ...this.getFormFieldsAsHashMap(this.formConfigs, {})\n    });\n  };\n  editEmployee(employee) {\n    const flatEmployeeStructure = convertNestedObjectToFlat(employee);\n    this.id = flatEmployeeStructure.id;\n    this.setState({\n      ...this.getFormFieldsAsHashMap(this.formConfigs, flatEmployeeStructure)\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.employee !== this.props.employee) {\n      if (this.props.employee) {\n        this.editEmployee(this.props.employee);\n      }\n    }\n  }\n\n  render() {\n    const { formInvalid } = this.state;\n    const { visible, loading, current } = this.props;\n\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Add Employee\n        </Button>\n        <Modal\n          destroyOnClose={true}\n          maskClosable={false}\n          visible={visible}\n          title=\"Add Employee\"\n          onOk={this.handleSubmit}\n          onCancel={this.handleCancel}\n          footer={[\n            <span\n              key=\"invalid\"\n              style={{\n                ...this.showForm(formInvalid, true),\n                paddingRight: 12,\n                color: 'red'\n              }}\n            >\n              Form Not Valid\n            </span>,\n            <Button key=\"back\" onClick={() => this.onChange(0)} style={this.showForm(current, 1)}>\n              Back\n            </Button>,\n            <Button key=\"next\" onClick={() => this.onChange(1)} style={this.showForm(current, 0)} type=\"primary\">\n              Next\n            </Button>,\n            <Button\n              style={this.showForm(current, 1)}\n              key=\"submit\"\n              type=\"primary\"\n              loading={loading}\n              onClick={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          ]}\n        >\n          <Steps\n            type=\"navigation\"\n            size=\"small\"\n            current={current}\n            onChange={this.onChange}\n            className=\"site-navigation-steps\"\n          >\n            <Step title=\"Personal Info\" />\n            <Step title=\"Company Info\" />\n          </Steps>\n          <form onSubmit={this.handleSubmit} noValidate>\n            {this.stepperDestribution.map((form, i) => (\n              <div key={i.toString()} style={this.showForm(current, i)}>\n                {form.map((inputConfig, j) => this.createInput(inputConfig, j))}\n              </div>\n            ))}\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    employee: state.employeeAddReducer.employee,\n    loading: state.employeeAddReducer.loading,\n    visible: state.employeeAddReducer.visible,\n    current: state.employeeAddReducer.currentStep,\n    isEditing: state.employeeAddReducer.editing\n  };\n};\n\nexport default connect(mapStateToProps)(EmployeeAdd);\n","import React from 'react';\nimport { Row, PageHeader } from 'antd';\nimport EmployeeList from './components/Employee-List';\nimport EmployeeAdd from './components/Employee-Add';\nimport { addEmployeeToEmployees } from './actions/employeeFetchAction';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageHeader\n        ghost={false}\n        title=\"Employee Management\"\n        subTitle=\"this is active employee list\"\n        extra={[\n          <Row key={0} justify=\"end\">\n            {/* need to refetch employee list, again but as jsonplaceholder\n      dont save data, will just update employees list in memeory  */}\n            <EmployeeAdd onSave={addEmployeeToEmployees}></EmployeeAdd>\n          </Row>\n        ]}\n      />\n      <EmployeeList></EmployeeList>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport createStore from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={createStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\n}\n"],"sourceRoot":""}